package functions;
import helpers.S;
import java.util.Random; 


public class matrix {
    
    // Version 0.5.4. ==== 12-21-22 : 6:41pm
    // =============================================================================================================================

    
    //1. Creates a static 2d with preset or random (no user input) 
    public static void genMat(){
        //Servin Help
        int[][] array = new int[4][4]; 

        for(int row = 0; row < array.length; row++){
            for(int col = 0; col < array[row].length; col++){
                int r = (int)(Math.random()*100+1); 
                array[row][col] = r; 
            }
        }

        print(array);        
        
    }

    // =============================================================================================================================


    public static void print(int[][] array){
        for(int row = 0; row < array.length; row++){
            for(int col = 0; col < array[row].length; col++){
                System.out.print(array[row][col]+"\t");
            }
            S.o(""); 
        }
    }
    
    // =============================================================================================================================

    
    //  takes user input to make 2d array
    // needs row and column length from user, then can insert numbers 
    // asks if they want to go point to point input,
    // or can input all numbers in single paste, starting input, left to right, top to bottom, 
    // (selects a row, then fills all columns then next to next row and fills all columns there)
// public static int 2d_io(){

// }

    // =============================================================================================================================


    //2. Print 

    // findSum() it takes a 2d array and calculates the addition of all values 
    // findAVG() it takes a 2d array and calculate average of the matrix values 
    // findMaxPerRow() it takes a 3d array and will print the largest value in each row
    // findMaxPerColum() it takes a 3d array and will print the largest value in each colum 
    // transpose() it takes a 3d array and it will return a 2d transposed from original. a transpose matrix is the translation of rows per column and vise versa 
// public static int transpose(){

// }

    // =============================================================================================================================


    public static void main(String[] args) {
        matrix a1 = new matrix(); 
        a1.genMat(); 

    }
    // =============================================================================================================================

}   
// ==================================================== [ END OF PROGRAM  ] ==============================================================

// ==================================================== [ PERSONAL NOTES ] ==============================================================
    // =============================================================================================================================


        // Personal Trial

        // Random mix = new Random(); 
        // int number; 

        // //2d will have 4x4 
        // for(int counter = 1; counter <= 10; counter++){
        //     number = 1+random.nextInt(16);
        // }
